# Generated by Django 4.1.1 on 2024-04-04 23:17

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import utils.funciones


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Persona',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dni', models.CharField(help_text='Sin puntos', max_length=8, validators=[django.core.validators.RegexValidator(code='invalid_numeric', message='Debe contener solo dígitos numéricos.', regex='^\\d+$'), django.core.validators.RegexValidator(code='invalid_length_8', message='Debe tener exactamente 8 dígitos.', regex='^\\d{8}$')])),
                ('cuil', models.CharField(help_text='Sin puntos y guiones', max_length=11, validators=[django.core.validators.RegexValidator(code='invalid_numeric', message='Debe contener solo dígitos numéricos.', regex='^\\d+$'), django.core.validators.RegexValidator(code='invalid_length_11', message='Debe tener exactamente 11 dígitos.', regex='^\\d{11}$')])),
                ('celular', models.CharField(help_text='Ejemplo: 1234567632', max_length=10, validators=[django.core.validators.RegexValidator(code='invalid_numeric', message='Debe contener solo dígitos numéricos.', regex='^\\d+$'), django.core.validators.RegexValidator(code='invalid_length_8', message='Debe tener exactamente 10 dígitos.', regex='^\\d{10}$')])),
                ('nacionalidad', models.CharField(choices=[('AF', 'Afganistán'), ('AL', 'Albania'), ('DE', 'Alemania'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AI', 'Anguila'), ('AQ', 'Antártida'), ('SA', 'Arabia Saudita'), ('DZ', 'Argelia'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AW', 'Aruba'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaiyán'), ('BS', 'Bahamas'), ('BH', 'Bahréin'), ('BD', 'Bangladesh'), ('BB', 'Barbados'), ('BE', 'Bélgica'), ('BZ', 'Belice'), ('BJ', 'Benín'), ('BM', 'Bermudas'), ('BY', 'Bielorrusia'), ('MM', 'Birmania'), ('BO', 'Bolivia'), ('BW', 'Botsuana'), ('BR', 'Brasil'), ('BN', 'Brunéi'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('BT', 'Bután'), ('CV', 'Cabo Verde'), ('KH', 'Camboya'), ('CM', 'Camerún'), ('CA', 'Canadá'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CY', 'Chipre'), ('CO', 'Colombia'), ('KM', 'Comoras'), ('CG', 'Congo'), ('KP', 'Corea del Norte'), ('KR', 'Corea del Sur'), ('CI', 'Costa de Marfil'), ('CR', 'Costa Rica'), ('HR', 'Croacia'), ('CU', 'Cuba'), ('DK', 'Dinamarca'), ('DM', 'Dominica'), ('EC', 'Ecuador'), ('EG', 'Egipto'), ('SV', 'El Salvador'), ('AE', 'Emiratos Árabes'), ('ER', 'Eritrea'), ('SK', 'Eslovaquia'), ('SI', 'Eslovenia'), ('ES', 'España'), ('US', 'Estados Unidos'), ('EE', 'Estonia'), ('ET', 'Etiopía'), ('PH', 'Filipinas'), ('FI', 'Finlandia'), ('FJ', 'Fiyi'), ('FR', 'Francia'), ('GA', 'Gabón'), ('GM', 'Gambia'), ('GE', 'Georgia'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GD', 'Granada'), ('GR', 'Grecia'), ('GL', 'Groenlandia'), ('GP', 'Guadalupe'), ('GU', 'Guam'), ('GT', 'Guatemala'), ('GY', 'Guayana'), ('GF', 'Guayana Francesa'), ('GN', 'Guinea'), ('GQ', 'Guinea Ecuatorial'), ('GW', 'Guinea-Bisáu'), ('HT', 'Haití'), ('HN', 'Honduras'), ('HU', 'Hungría'), ('IN', 'India'), ('ID', 'Indonesia'), ('IR', 'Irán'), ('IQ', 'Iraq'), ('IE', 'Irlanda'), ('IS', 'Islandia'), ('IL', 'Israel'), ('IT', 'Italia'), ('JM', 'Jamaica'), ('JP', 'Japón'), ('JO', 'Jordania'), ('KZ', 'Kazajistán'), ('KE', 'Kenia'), ('KG', 'Kirguistán'), ('KW', 'Kuwait'), ('LA', 'Laos'), ('LS', 'Lesoto'), ('LV', 'Letonia'), ('LB', 'Líbano'), ('LR', 'Liberia'), ('LY', 'Libia'), ('LI', 'Liechtenstein'), ('LT', 'Lituania'), ('LU', 'Luxemburgo'), ('MK', 'Macedonia'), ('MG', 'Madagascar'), ('MY', 'Malasia'), ('MW', 'Malaui'), ('MV', 'Maldivas'), ('ML', 'Malí'), ('MT', 'Malta'), ('MA', 'Marruecos'), ('MQ', 'Martinica'), ('MU', 'Mauricio'), ('MR', 'Mauritania'), ('YT', 'Mayotte'), ('MX', 'México'), ('FM', 'Micronesia'), ('MD', 'Moldavia'), ('MC', 'Mónaco'), ('MN', 'Mongolia'), ('MS', 'Montserrat'), ('MZ', 'Mozambique'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NI', 'Nicaragua'), ('NE', 'Níger'), ('NG', 'Nigeria'), ('NU', 'Niue'), ('NF', 'Norfolk'), ('NO', 'Noruega'), ('NC', 'Nueva Caledonia'), ('NZ', 'Nueva Zelanda'), ('OM', 'Omán'), ('NL', 'Países Bajos'), ('PA', 'Panamá'), ('PG', 'Papúa Nueva Guinea'), ('PK', 'Pakistán'), ('PY', 'Paraguay'), ('PE', 'Perú'), ('PN', 'Pitcairn'), ('PF', 'Polinesia Francesa'), ('PL', 'Polonia'), ('PT', 'Portugal'), ('PR', 'Puerto Rico'), ('QA', 'Qatar'), ('UK', 'Reino Unido'), ('CZ', 'República Checa'), ('DO', 'República Dominicana'), ('RE', 'Reunión'), ('RW', 'Ruanda'), ('RO', 'Rumania'), ('RU', 'Rusia'), ('EH', 'Sahara Occidental'), ('WS', 'Samoa'), ('AS', 'Samoa Americana'), ('SM', 'San Marino'), ('PM', 'San Pedro y Miquelón'), ('SH', 'Santa Elena'), ('LC', 'Santa Lucía'), ('ST', 'Santo Tomé y Príncipe'), ('SN', 'Senegal'), ('CS', 'Serbia y Montenegro'), ('SC', 'Seychelles'), ('SL', 'Sierra Leona'), ('SG', 'Singapur'), ('SY', 'Siria'), ('SO', 'Somalia'), ('LK', 'Sri Lanka'), ('SZ', 'Suazilandia'), ('ZA', 'Sudáfrica'), ('SD', 'Sudán'), ('SE', 'Suecia'), ('CH', 'Suiza'), ('SR', 'Surinam'), ('TH', 'Tailandia'), ('TW', 'Taiwán'), ('TZ', 'Tanzania'), ('TJ', 'Tayikistán'), ('TL', 'Timor Oriental'), ('TG', 'Togo'), ('TK', 'Tokelau'), ('TO', 'Tonga'), ('TT', 'Trinidad y Tobago'), ('TN', 'Túnez'), ('TM', 'Turkmenistán'), ('TR', 'Turquía'), ('TV', 'Tuvalu'), ('UA', 'Ucrania'), ('UG', 'Uganda'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistán'), ('VU', 'Vanuatu'), ('VE', 'Venezuela'), ('VN', 'Vietnam'), ('WF', 'Wallis y Futuna'), ('YE', 'Yemen'), ('DJ', 'Yibuti'), ('ZM', 'Zambia'), ('ZW', 'Zimbabue')], default='AR', max_length=2)),
                ('nombre', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator(code='invalid_text', message='Debe contener letras, espacios', regex='^[A-Za-záéíóúÁÉÍÓÚñÑ\\s.]+$')])),
                ('apellido', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator(code='invalid_text', message='Debe contener letras, espacios', regex='^[A-Za-záéíóúÁÉÍÓÚñÑ\\s.]+$')])),
                ('fecha_nacimiento', models.DateField(validators=[utils.funciones.validate_no_mayor_actual])),
                ('direccion', models.CharField(help_text='Calle y numero', max_length=50, validators=[django.core.validators.RegexValidator(code='invalid_text', message='Solo se permiten letras, números y espacios, con o sin tildes.', regex='^[A-Za-z0-9\\sñÑáéíóúÁÉÍÓÚ]+$')])),
                ('mail', models.EmailField(help_text='Debe ser un correo válido.', max_length=50, validators=[django.core.validators.EmailValidator(message='Debe ser un correo válido.')])),
                ('estado_civil', models.PositiveSmallIntegerField(choices=[(1, 'Soltero'), (2, 'Casado'), (3, 'Divorciado'), (4, 'Viudo/a'), (5, 'Separado/a'), (6, 'Convivencia')])),
                ('es_afiliado', models.BooleanField(default=False)),
                ('es_alumno', models.BooleanField(default=False)),
                ('es_profesor', models.BooleanField(default=False)),
                ('es_encargado', models.BooleanField(default=False)),
                ('es_grupo_familiar', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.PositiveSmallIntegerField(choices=[(3, 'alumno'), (4, 'profesor'), (2, 'familiar'), (1, 'afiliado'), (5, 'encargado')])),
                ('hasta', models.DateTimeField(blank=True, null=True)),
                ('desde', models.DateTimeField(blank=True, null=True)),
                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='personas.persona')),
            ],
        ),
    ]
